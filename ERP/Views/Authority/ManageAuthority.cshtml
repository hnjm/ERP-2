@using ERP.Models.ViewModel.Users
@model ERP.Models.ViewModel.Other.AuthorityViewModel

@{
    var user = ViewBag.User as UsersDetailsViewModel;
    ViewData["Title"] = "ManageAuthority";
}

<div>
    <hr />
    <form asp-action="ManageAuthority">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(_ => user.UserName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(_ => user.UserName)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(_ => user.Email)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(_ => user.Email)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayName("Verified")
            </dt>
            <dd class="col-sm-10">
                @{
                    if (user!.IsVerified)
                    {
                        <label>Yes</label>
                    }
                    else
                    {
                        <label>No</label>
                    }
                }
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(x => x.Roles)
            </dt>
            <dd class="col-sm-10">
                @{
                    if (Model.Roles.Length > 0)
                    {
                        @for (var i = 0; i < Model.Roles.Length; i++)
                        {
                            <input asp-for="@Model.Roles[i].IsSelected" />
                            <label asp-for="@Model.Roles[i].IsSelected">@Model.Roles[i].Name</label>
                            <input type="hidden" asp-for="@Model.Roles[i].Name" />
                            if (i != Model.Roles.Length - 1)
                            {
                                <label style="color: brown">--</label>
                            }
                        }
                    }
                    else
                    {
                        <a asp-controller="Roles" asp-action="Create">Create Role</a>
                    }
                }
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(x => x.Claims)
            </dt>
            <dd class="col-sm-10">
                @{
                    if (Model.Claims.Length > 0)
                    {
                        @for (var i = 0; i < Model.Claims.Length; i++)
                        {
                            <input asp-for="@Model.Claims[i].IsSelected" />
                            <label asp-for="@Model.Claims[i].IsSelected">@Model.Claims[i].Type</label>
                            <label asp-for="@Model.Claims[i].IsSelected">[@Model.Claims[i].Value]</label>
                            <input type="hidden" asp-for="@Model.Claims[i].Type" />
                            <input type="hidden" asp-for="@Model.Claims[i].Value" />
                            if (i != Model.Claims.Length - 1)
                            {
                                <label style="color: brown">--</label>
                            }
                        }
                    }
                    else
                    {
                        <a asp-controller="Claims" asp-action="Create">Create Claim</a>
                    }
                }
            </dd>
        </dl>
        <hr />
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <input type="submit" value="Update" class="btn btn-outline-primary btn-dark" />
                </div>
            </div>
        </div>
    </form>
</div>
<div>
    <a asp-controller="Users" asp-action="Details" asp-route-id="@user!.Id">Go to User</a> |
    <a asp-controller="Users" asp-action="GetUsers">Back to List</a>
</div>
